// sidebar.component.scss
.sidebar {
  position: fixed;
  left: 0;
  top: 0;
  height: 100vh;
  width: var(--sidebar-width-collapsed);
  background-color: #2c3e50;
  transition: width var(--sidebar-transition-duration) ease; // Transizione solo sulla larghezza
  z-index: 1000; // Sopra la navbar
  overflow-x: hidden;
  display: flex; // Per organizzare contenuto interno se necessario
  flex-direction: column; // Esempio

  &.expanded { // Questa classe sarà gestita da Angular tramite [class.expanded]
    width: var(--sidebar-width-expanded);

    .menu-item-text {
      opacity: 1;
      // Potresti voler ritardare leggermente l'apparizione del testo
      // transition-delay: calc(var(--sidebar-transition-duration) / 2);
    }
  }

  // Rimuovi il blocco &:hover che modifica la 'width' se l'espansione è
  // interamente controllata dallo stato 'isExpanded' del componente.
  // Se vuoi mantenere l'hover SOLO per mostrare il testo quando è già espansa:
  // &.expanded:hover .menu-item-text { /* stili specifici se necessario */ }

  ion-list {
    --background: transparent; // La sidebar ha già il suo colore
    background: transparent;
    padding: 0;
  }

  .menu-items {
    padding: 20px 0;
    // Se la lista può crescere, potresti volere overflow-y: auto qui
    // e un'altezza definita o flex-grow: 1

    ion-item {
      --background: transparent;
      --color: white;
      // ... i tuoi stili per ion-item

      ion-icon {
        font-size: 24px;
        margin-right: 20px;
        min-width: 24px;
        color: #ecf0f1;
      }
    }
  }

  .menu-item-text {
    opacity: 0;
    transition: opacity 0.2s ease; // Transizione per l'opacità
    white-space: nowrap;
  }
}